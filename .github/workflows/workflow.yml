name: Terraform
on:
  push:
    branches:
      - main    
  pull_request:

jobs:
  pr:
    if: github.event_name == 'pull_request'
    name: terraform pr
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout pr
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6

      - name: Run terraform fmt check
        id: fmt
        run: terraform fmt -check -diff -recursive

      - name: Run terraform init
        id: init
        run: terraform init -input=false
      
      - name: Run terraform validate
        id: validate
        run: terraform validate -no-color

      - uses: terraform-linters/setup-tflint@v2

      - name: Init TFLint       
        run: tflint --init

      - name: Run TFLint
        id: lint
        run: tflint -f compact

      - name: tfsec
        id: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
      
      - name: Run terraform plan
        id: plan
        run: terraform plan -input=false -no-color

      - uses: actions/github-script@v6     
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
              #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
              #### Terraform Lint 🤖\`${{ steps.lint.outcome }}\`
              #### Terraform Tfsec 🤖\`${{ steps.tfsec.outcome }}\`
              #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
              <details><summary>Show Plan</summary>
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              </details>
              *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
      
      - name: Render terraform docs inside the README.md and push changes back to PR branch
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"      

  push:
    if: github.event_name == 'push'
    name: terraform push
    runs-on: ubuntu-20.04
    steps:

      - name: Run terraform init
        id: init
        run: terraform init -input=false
      
      - name: Terraform Apply        
        run: terraform apply -auto-approve -input=false
